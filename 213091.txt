4. git init - со оваа команда иницијализираме git во локалното repo
5. git remote add origin https://github.com/stefantosev/SI_2023_lab1_213091.git - ги поврзуваме локалното repo со remote repo
6. git add REAMDE.md - додаваме README file на сцената (staging area) 
   git commit -m "Initial commit"  - со оваа команда правиме snapshot од тој фајл 
7. git add SILab1.java
   git commit -m "Add java class"
8. git push -u origin master - синхронизација на локалното repo со remote репозиториумот
9. git branch bug1 - креирање на нови гранки
   git branch bug2, git branch bug3
   git branch  - проверка на колку branches имаме
10. git checkout bug1- промена на друга гранка од гранката master
.
.
.
16. git push -u origin bug1 - ги синхронизираме локалното repo со remote репозиториумот, исто и за bug2 и bug3
17. git checkout master - промена од една гранка во гранката master
18. git merge bug1 - спојување на гранката master со гранката bug1
		     спојувањето е направено според Fast-Forward стратегијата
		     немало конфликти

20.git merge bug2 - спојување на гранката master со гранката bug2
		    за спојувањето на bug2, спојувањето е со 
		    рекурзивна стратегија и во овој чекор немало конфликти

23. git rebase master - со оваа команда правиме преместување на претходните
			commits во temp зона каде се извршуваат првен претходните commits			
			па после најпоследните од bug3
.
.
25. git merge bug3 - спојување на гранката master со гранката bug3
		     за спојувањето на bug3 немало конфликти а за спојување
		     е искористена Fast-Forward стратегија

26. git push --force -u origin bug3  - синхронизација на remote repo со локалното
27. git log - Проверка на претходни commits
    git status  - проверуваме колку files се untracked или tracked 
		  и дали се додадени на сцената 
